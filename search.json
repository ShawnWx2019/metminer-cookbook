[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MetMiner cookbook",
    "section": "",
    "text": "Project\nMetMiner: A user-friendly pipeline for large-scale plant metabolomics data analysis.\nThis is the documentation of MetMiner. You can get up-to-date verison from the GitHub repository https://github.com/ShawnWx2019/MetMiner.\nIn this pipeline, tidyMass Shen et al. (2022) take on the majority of the upstream data analysis, data cleaning, and metabolite annotation tasks.\nFurthermore, we have developed a Metabolomics Downstream Analysis toolkit MDAtoolkits and a user-friendly WGCNA Shiny app. They are responsible for the downstream analysis and data mining section.\nThe metMiner shiny app has been packaged into a TBtools Chen et al. (2023) plugin, which can be downloaded and installed through the TBtools plugin store. Thanks to TBtools for providing a convenient dependency resolution solution.\n\n\nCitation\nIf you have utilized MetMiner in your project, please cite:\n\nXiao Wang, Shuang Liang, Ke Yu, Wenqi Yang, Bing Zhao, Fei Liang, Xiang Zhu, Chao Zhou, Luis A. J. Mur, Jeremy A, Roberts, Junli Zhang,and Xuebin Zhang. 2024 “MetMiner: A user-friendly pipeline for large-scale plant metabolomics data analysis”\nShen, Xiaotao, Hong Yan, Chuchu Wang, Peng Gao, Caroline H. Johnson, and Michael P. Snyder. 2022. “TidyMass an Object-Oriented Reproducible Analysis Framework for LC Data.” Nature Communications 13 (1): 4365. https://doi.org/10.1038/s41467-022-32155-w.\n\n\n\n\n\n\nReferences\n\nChen, Chengjie, Ya Wu, Jiawei Li, Xiao Wang, Zaohai Zeng, Jing Xu, Yuanlong Liu, et al. 2023. “TBtools-II: A \"One for All, All for One\" Bioinformatics Platform for Biological Big-Data Mining.” Molecular Plant 0 (0). https://doi.org/10.1016/j.molp.2023.09.010.\n\n\nShen, Xiaotao, Hong Yan, Chuchu Wang, Peng Gao, Caroline H. Johnson, and Michael P. Snyder. 2022. “TidyMass an Object-Oriented Reproducible Analysis Framework for LC–MS Data.” Nature Communications 13 (1): 4365. https://doi.org/10.1038/s41467-022-32155-w.",
    "crumbs": [
      "About"
    ]
  },
  {
    "objectID": "content/Datamining_method.html",
    "href": "content/Datamining_method.html",
    "title": "MetMiner Cookbook",
    "section": "",
    "text": "4.3 Data integration\nSet the method for integrating the data, then click the Start integration button to proceed with data integration. The result will generate an accumulation matrix, sample information, variable information, and integrated results of compound annotation, which you can download.\n\nSwitch to the Figures tab, click the Start visualization button, adjust PCA grouping colors, and proceed with plotting. You can also set the image size, then click Download to download the image. Open the Interactive plot button, where you can view the 3D PCA plot, hover the mouse to see detailed sample information. Scroll down the page, at the bottom, you can see the sample correlation plot. You can adjust its colors, grouping, clustering, and more.",
    "crumbs": [
      "Data mining",
      "Introduction"
    ]
  },
  {
    "objectID": "content/references.html",
    "href": "content/references.html",
    "title": "References",
    "section": "",
    "text": "References",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "content/feature_dedup.html",
    "href": "content/feature_dedup.html",
    "title": "Feature deduplication",
    "section": "",
    "text": "Feature deduplication\nFirst, select hydrophilic interaction chromatography (HILIC) or reverse phase chromatography (RP), then choose the ion mode, and finally select the filtering method for annotation. For multiple annotations: you can choose to retain all, retain those with high scores, or retain the first annotation. For removing redundant annotations: you can choose to retain all or retain the first annotation. You can also filter annotations based on accuracy: you can choose to retain all or those with higher accuracy (1,2). After the parameters are set, click the Start annotation filtering button to filter annotations.",
    "crumbs": [
      "Downstream data processing",
      "Feature deduplication"
    ]
  },
  {
    "objectID": "content/iWGCNA.html",
    "href": "content/iWGCNA.html",
    "title": "Data mining by iWGCNA",
    "section": "",
    "text": "Data mining by iWGCNA",
    "crumbs": [
      "Data mining",
      "iterative WGCNA"
    ]
  },
  {
    "objectID": "content/pre_targeted.html",
    "href": "content/pre_targeted.html",
    "title": "Pseudotargeted metabolomics",
    "section": "",
    "text": "Pseudotargeted metabolomics"
  },
  {
    "objectID": "content/Upstream_method.html",
    "href": "content/Upstream_method.html",
    "title": "Upsteam Data Process",
    "section": "",
    "text": "This Shiny application is developed based on the tidyMass package, specifically designed for the analysis of non-targeted/targeted metabolomics data. Dr. Xiaotao Shen’s tidyMass is an excellent open-source software tailored for metabolomics data processing. It adheres to the tidyverse development philosophy, significantly enhancing code readability. Additionally, the newly added mass_dataset object makes the metabolomics data analysis process more transparent and reproducible.\n\n\n\n\nlibrary(MetMiner)\nlibrary(tidyverse)\nlibrary(tidymass)\nlibrary(MDAtoolkits)\nrun_metMiner(maxRequestSize = 300)\n\n \n\n\n\nBefore starting the project, we need to set up the working directory and upload sample information. You have the following three ways to upload files. \nStart with Ms file: If your data is in raw format, you need to first convert it to .mgf format using HPC_tidymass. Then click on ‘Start with Ms file’ to upload the file. Then upload the folder containing MS2. \n\nStart with table file: If your data is a post-peak metabolite expression matrix, you can click on the ‘Start with table file’ button to upload the data. The sample table is as follows, and the first four columns must exist, with column names not to be changed. Then upload the folder containing MS2.  \nStart with massdataset object: If your data is generated by tidymass, you can choose the ‘Start with massdataset object’ button to upload your data. Then upload the folder containing MS2.",
    "crumbs": [
      "Upstream data processing",
      "Introduction"
    ]
  },
  {
    "objectID": "content/Upstream_method.html#introduce",
    "href": "content/Upstream_method.html#introduce",
    "title": "Upsteam Data Process",
    "section": "",
    "text": "This Shiny application is developed based on the tidyMass package, specifically designed for the analysis of non-targeted/targeted metabolomics data. Dr. Xiaotao Shen’s tidyMass is an excellent open-source software tailored for metabolomics data processing. It adheres to the tidyverse development philosophy, significantly enhancing code readability. Additionally, the newly added mass_dataset object makes the metabolomics data analysis process more transparent and reproducible.",
    "crumbs": [
      "Upstream data processing",
      "Introduction"
    ]
  },
  {
    "objectID": "content/Upstream_method.html#usage-of-shinyapp",
    "href": "content/Upstream_method.html#usage-of-shinyapp",
    "title": "Upsteam Data Process",
    "section": "",
    "text": "library(MetMiner)\nlibrary(tidyverse)\nlibrary(tidymass)\nlibrary(MDAtoolkits)\nrun_metMiner(maxRequestSize = 300)\n\n \n\n\n\nBefore starting the project, we need to set up the working directory and upload sample information. You have the following three ways to upload files. \nStart with Ms file: If your data is in raw format, you need to first convert it to .mgf format using HPC_tidymass. Then click on ‘Start with Ms file’ to upload the file. Then upload the folder containing MS2. \n\nStart with table file: If your data is a post-peak metabolite expression matrix, you can click on the ‘Start with table file’ button to upload the data. The sample table is as follows, and the first four columns must exist, with column names not to be changed. Then upload the folder containing MS2.  \nStart with massdataset object: If your data is generated by tidymass, you can choose the ‘Start with massdataset object’ button to upload your data. Then upload the folder containing MS2.",
    "crumbs": [
      "Upstream data processing",
      "Introduction"
    ]
  },
  {
    "objectID": "content/installation.html",
    "href": "content/installation.html",
    "title": "Installation",
    "section": "",
    "text": "The MetMiner pipeline is primarily driven by three R packages: TidyMass MDAtoolkits WGCNA, each responsible for different components as illustrated in Figure 1. These packages are integrated into two user-friendly Shiny applications. We offer two installation methods:\n\nFor users proficient in R and with debugging skills, we recommend the first method, which involves installing the R packages individually.\nFor general users, we suggest installing and running the application via the TBtools plugin store.\n\n\n\n\n\n\n\n\n\nFigure 1: Structure of metMiner pipeline.\n\n\n\n\n\n\n\n\nCopy and paste following code into your R script or R console and run:\n\n##&gt; for chinese users:\n##&gt; options(\"repos\" = c(CRAN=\"https://mirrors.tuna.tsinghua.edu.cn/CRAN/\"))\n\nif (!require('remotes')) install.packages('remotes');\nif (!require('Hmisc')) install.packages('Hmisc');\nif (!require('tidymass')) {\n  source(\"https://www.tidymass.org/tidymass-packages/install_tidymass.txt\");\n  install_tidymass(from = \"tidymass.org\")\n};\nif (!require('ropls')) remotes::install_github(\"SamGG/ropls\");\nif (!require('PCAtools')) remotes::install_github('kevinblighe/PCAtools');\nif (!require('MDAtoolkits')) remotes::install_github('ShawnWx2019/MDAtoolkits',ref = 'master');\nif (!require('shinyFiles')) remotes::install_github('thomasp85/shinyFiles');\nif (!require('shinyWidgets')) remotes::install_github(\"dreamRs/shinyWidgets\");\nif (!require('ComplexHeatmap')) remotes::install_github('jokergoo/ComplexHeatmap');\nif (!require('clusterProfiler')) remotes::install_github('YuLab-SMU/clusterProfiler');\nif (!require('shinyjs')) install.packages('shinyjs');\nif (!require('dashboardthemes')) install.packages('dashboardthemes');\nif (!require(\"DT\")) install.packages('DT');\nif (!require('shiny')) install.packages('shiny');\nif (!require('bsicons')) install.packages('bsicons');\nif (!require('bslib')) install.packages('bslib');\nif (!require('ggsci')) install.packages('ggsci');\nif (!require('plotly')) install.packages('plotly');\nif (!require('ggrepel')) install.packages('ggrepel');\nif (!require('shinythemes')) install.packages('shinythemes');\nif (!require('ggstatsplot')) install.packages('ggstatsplot');\nif (!require('patchwork')) install.packages('patchwork');\nif (!require('tidyverse')) install.packages('tidyverse');\nif (!require('shinyjqui')) install.packages('shinyjqui');\nif (!require('colourpicker')) install.packages('colourpicker');\nif (!require('RCurl')) install.packages('RCurl');\nif (!require('MetMiner')) remotes::install_github('ShawnWx2019/MetMiner');\n\nrunning following code to start metMiner shinyapp\n\nlibrary(tidyverse)\nlibrary(tidymass)\nlibrary(MDAtoolkits)\nlibrary(MetMiner)\n##&gt; start metMiner shinyapp\nrun_metMiner(maxRequestSize = 300)\n\n\n\n\nClone github repo to local\n# clone this repo to your machine\ngit clone git@github.com:ShawnWx2019/WGCNA-shinyApp.git WGCNAshiny\n\ncd WGCNAshiny\n\n## Method 1.\n\nRscript WGCNAbyClick.v1.R\n\n## Method 2. open WGCNAbyClick.v1.R by Rstudio or other IDE you perfer and run this script.\nDownload zip file and started from Rstudio\n\n\n\n\n\n\n\n\n\n\n\n(a) Github page\n\n\n\n\n\n\n\n\n\n\n\n(b) Shiny Script\n\n\n\n\n\n\n\n\n\n\n\n\n\n(c) Run App\n\n\n\n\n\n\n\n\n\n\n\n(d) Web-page\n\n\n\n\n\n\n\nFigure 2: getting started\n\n\n\n\n\n\n\nFollow the following steps to install RServer.plugin, MetMiner shinyapp and WGCNA shinyapp\n\n\n\n\n\n\n\n\n\n\n\n(a) Find plugin store\n\n\n\n\n\n\n\n\n\n\n\n(b) Install Rserver plugin\n\n\n\n\n\n\n\n\n\n\n\n\n\n(c) Download Rserver plugin\n\n\n\n\n\n\n\n\n\n\n\n(d) Install Rserver plugin\n\n\n\n\n\n\n\nFigure 3: Step by step TBtools plugin install\n\n\n\nInstall MetMiner shiny plugin and WGCNA shiny plugin in same way.\n\n\n\n\n\n\n\n\nstart wgcna shinyapp\n\n\n\n\n\n\n\nstart wgcna shinyapp\n\n\n\n\n\n\nFigure 4: start shinyapps",
    "crumbs": [
      "Installation"
    ]
  },
  {
    "objectID": "content/installation.html#structure-of-metminer",
    "href": "content/installation.html#structure-of-metminer",
    "title": "Installation",
    "section": "",
    "text": "Figure 1: Structure of metMiner pipeline.",
    "crumbs": [
      "Installation"
    ]
  },
  {
    "objectID": "content/installation.html#method-1-install-from-r-or-rstudio",
    "href": "content/installation.html#method-1-install-from-r-or-rstudio",
    "title": "Installation",
    "section": "",
    "text": "Copy and paste following code into your R script or R console and run:\n\n##&gt; for chinese users:\n##&gt; options(\"repos\" = c(CRAN=\"https://mirrors.tuna.tsinghua.edu.cn/CRAN/\"))\n\nif (!require('remotes')) install.packages('remotes');\nif (!require('Hmisc')) install.packages('Hmisc');\nif (!require('tidymass')) {\n  source(\"https://www.tidymass.org/tidymass-packages/install_tidymass.txt\");\n  install_tidymass(from = \"tidymass.org\")\n};\nif (!require('ropls')) remotes::install_github(\"SamGG/ropls\");\nif (!require('PCAtools')) remotes::install_github('kevinblighe/PCAtools');\nif (!require('MDAtoolkits')) remotes::install_github('ShawnWx2019/MDAtoolkits',ref = 'master');\nif (!require('shinyFiles')) remotes::install_github('thomasp85/shinyFiles');\nif (!require('shinyWidgets')) remotes::install_github(\"dreamRs/shinyWidgets\");\nif (!require('ComplexHeatmap')) remotes::install_github('jokergoo/ComplexHeatmap');\nif (!require('clusterProfiler')) remotes::install_github('YuLab-SMU/clusterProfiler');\nif (!require('shinyjs')) install.packages('shinyjs');\nif (!require('dashboardthemes')) install.packages('dashboardthemes');\nif (!require(\"DT\")) install.packages('DT');\nif (!require('shiny')) install.packages('shiny');\nif (!require('bsicons')) install.packages('bsicons');\nif (!require('bslib')) install.packages('bslib');\nif (!require('ggsci')) install.packages('ggsci');\nif (!require('plotly')) install.packages('plotly');\nif (!require('ggrepel')) install.packages('ggrepel');\nif (!require('shinythemes')) install.packages('shinythemes');\nif (!require('ggstatsplot')) install.packages('ggstatsplot');\nif (!require('patchwork')) install.packages('patchwork');\nif (!require('tidyverse')) install.packages('tidyverse');\nif (!require('shinyjqui')) install.packages('shinyjqui');\nif (!require('colourpicker')) install.packages('colourpicker');\nif (!require('RCurl')) install.packages('RCurl');\nif (!require('MetMiner')) remotes::install_github('ShawnWx2019/MetMiner');\n\nrunning following code to start metMiner shinyapp\n\nlibrary(tidyverse)\nlibrary(tidymass)\nlibrary(MDAtoolkits)\nlibrary(MetMiner)\n##&gt; start metMiner shinyapp\nrun_metMiner(maxRequestSize = 300)\n\n\n\n\nClone github repo to local\n# clone this repo to your machine\ngit clone git@github.com:ShawnWx2019/WGCNA-shinyApp.git WGCNAshiny\n\ncd WGCNAshiny\n\n## Method 1.\n\nRscript WGCNAbyClick.v1.R\n\n## Method 2. open WGCNAbyClick.v1.R by Rstudio or other IDE you perfer and run this script.\nDownload zip file and started from Rstudio\n\n\n\n\n\n\n\n\n\n\n\n(a) Github page\n\n\n\n\n\n\n\n\n\n\n\n(b) Shiny Script\n\n\n\n\n\n\n\n\n\n\n\n\n\n(c) Run App\n\n\n\n\n\n\n\n\n\n\n\n(d) Web-page\n\n\n\n\n\n\n\nFigure 2: getting started",
    "crumbs": [
      "Installation"
    ]
  },
  {
    "objectID": "content/installation.html#method-2-install-from-tbtools-plugin-store",
    "href": "content/installation.html#method-2-install-from-tbtools-plugin-store",
    "title": "Installation",
    "section": "",
    "text": "Follow the following steps to install RServer.plugin, MetMiner shinyapp and WGCNA shinyapp\n\n\n\n\n\n\n\n\n\n\n\n(a) Find plugin store\n\n\n\n\n\n\n\n\n\n\n\n(b) Install Rserver plugin\n\n\n\n\n\n\n\n\n\n\n\n\n\n(c) Download Rserver plugin\n\n\n\n\n\n\n\n\n\n\n\n(d) Install Rserver plugin\n\n\n\n\n\n\n\nFigure 3: Step by step TBtools plugin install\n\n\n\nInstall MetMiner shiny plugin and WGCNA shiny plugin in same way.\n\n\n\n\n\n\n\n\nstart wgcna shinyapp\n\n\n\n\n\n\n\nstart wgcna shinyapp\n\n\n\n\n\n\nFigure 4: start shinyapps",
    "crumbs": [
      "Installation"
    ]
  },
  {
    "objectID": "content/Import_data.html",
    "href": "content/Import_data.html",
    "title": "Downstream Data Process",
    "section": "",
    "text": "Downstream Data Process",
    "crumbs": [
      "Upstream data processing",
      "Data import"
    ]
  },
  {
    "objectID": "content/dam.html",
    "href": "content/dam.html",
    "title": "Different Accumulated Metabolite Analysis",
    "section": "",
    "text": "Different Accumulated Metabolite Analysis",
    "crumbs": [
      "Downstream data processing",
      "DAM analysis"
    ]
  },
  {
    "objectID": "content/feature_anno.html",
    "href": "content/feature_anno.html",
    "title": "Feature Annotation",
    "section": "",
    "text": "Feature Annotation",
    "crumbs": [
      "Downstream data processing",
      "Feature annotation"
    ]
  },
  {
    "objectID": "content/summary.html",
    "href": "content/summary.html",
    "title": "Summary",
    "section": "",
    "text": "Summary\nIn summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "content/Project_init.html",
    "href": "content/Project_init.html",
    "title": "Project initiate",
    "section": "",
    "text": "Project initiate",
    "crumbs": [
      "Upstream data processing",
      "Project initiate"
    ]
  }
]